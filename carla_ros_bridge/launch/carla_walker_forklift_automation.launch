<launch>
  <!-- Launch carla_ros_bridge with args -->
  <arg name="town" default="WarehouseGroundTent"/>

  <arg name="simulate_ros_sensors" doc="Set to true to add in ROS sensors." default="false"/>
  <arg name="sensor_config_name" default="tentmapcamera.json" doc="Filename of the JSON config in carla_spawn_objects/config/"/>
  
  <arg name="oscillate_object" doc="set to true to include motion of the object" default="false"/>
  <arg name="box_follow_trajectory" doc="set to true to include motion of the object" default="false"/>
  <arg name="spawn_ego_vehicle" doc="set to true to spawn the ego vehicle" default="True"/>
  <arg name="ego_follow_traj" doc="set to true to move the ego vehicle" default="false"/>
  <arg name="enable_rviz" doc="Set to true to launch RViz" default="true"/>
  <arg name="rviz_config" default="$(find carla_ros_bridge)/rviz/default_config.rviz" doc="Path to the RViz configuration file"/>
  <arg name="spawn_map_sensors" doc="set to true to spawn the map sensors (these are required)" default="True"/>

  <arg name="spawn_camera_control" doc="set to true to control the camera via pygame" default="True"/>
  <arg name="spawn_walker_control" doc="set to true to control the walker via pygame" default="True"/>
  <arg name="spawn_ego_control" doc="set to true to spawn the ego vehicle via pygame" default="True"/>


  <include file="$(find carla_ros_bridge)/launch/carla_ros_bridge.launch">
    <arg name="synchronous_mode" value="true"/>
    <arg name="town" value="$(arg town)"/>
    <arg name="fixed_delta_seconds" value="0.05"/>
  </include>

  <group if="$(arg spawn_map_sensors)">
    <include file="$(find carla_spawn_objects)/launch/carla_spawn_map_sensors.launch"/>
  </group>

  <!-- Include vehcicle spawn launch file -->
  <group if="$(arg spawn_ego_vehicle)">
    <include file="$(find carla_spawn_objects)/launch/carla_example_ego_vehicle.launch"/>

  </group>

  <!-- Run lerp_object.py -->
  <node pkg="carla_spawn_objects" type="lerp_object.py" name="lerp_object" output="screen" 
    args="--spawn-blueprint-name static.prop.box01 --wait-for-carla-status"/>

  <!-- Run oscillate_transform.py -->
  <group if="$(arg oscillate_object)">
    <node pkg="carla_spawn_objects" type="oscillate_transform.py" name="oscillate_transform" output="screen"/>
  </group>

  <!-- Run object_follow_traj.py -->
  <group if="$(arg box_follow_trajectory)">
    <node pkg="carla_spawn_objects" type="object_follow_traj.py" name="object_follow_traj" output="screen"/>
  </group>


  <!-- include ROS sensors-->
  <group if="$(arg simulate_ros_sensors)">
    <node pkg="carla_spawn_objects" type="carla_spawn_objects.py" name="spawn_from_config" output="screen">
      <param name="objects_definition_file" value="$(find carla_spawn_objects)/config/$(arg sensor_config_name)"/>
    </node>
  </group>

  <!-- Launch RViz -->
  <group if="$(arg enable_rviz)">
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(arg rviz_config)" output="screen"/>
  </group>

  
  <!-- Run dubinspath_visworks.py -->
  <!-- <group if="$(arg ego_follow_traj)">
    <node pkg="carla_ros_bridge" type="dubinspath_visworks.py" name="dubinspath_visworks" output="screen"/>
  </group> -->

  <!-- Walker support                                                -->

  <arg name="spawn_walker" default="true"/>

  <group if="$(arg spawn_walker)">

  <arg name="objects_definition_file" default='$(find carla_spawn_objects)/config/walker_01.json'/>
]  <arg name="spawn_sensors_only" default="false"/>

  <include file="$(find carla_spawn_objects)/launch/carla_spawn_objects.launch">
    <arg name="objects_definition_file" value='$(arg objects_definition_file)'/>
    <arg name="spawn_sensors_only" value="$(arg spawn_sensors_only)" />
  </include>


    <!-- 2. Start the control agent that follows a Path -->
    <node pkg="carla_walker_agent" type="carla_walker_agent.py"
          name="walker_01"
          output="screen">
      <param name="role_name"    value="walker_01"/>
      <param name="target_speed" value="0.8"/>
      <param name="mode"         value="vehicle"/>
    </node>
  </group>


  <!-- Spawn the PyGame Terminals -->

  <group if="$(arg spawn_camera_control)">
    <node pkg="carla_spawn_objects" type="camera_pygame_teleop.py"
          name="move_camera"
          output="screen"/>
  </group>

  <group if="$(arg spawn_walker_control)">
    <node pkg="carla_walker_agent" type="walker_pygame_teleop.py"
          name="move_walker"
          output="screen"/>
  </group>

  <group if="$(arg spawn_ego_control)">
    <node pkg="carla_spawn_objects" type="ego_pygame_teleop.py"
          name="move_ego"
          output="screen"/>
  </group>

</launch>
